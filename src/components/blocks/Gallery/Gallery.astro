---
import { Box } from "@/components/_base/Box/Box";
import { Type } from "@/components/_base/Type/Type";
import GalleryImage from "@/components/blocks/Gallery/components/GalleryImage/GalleryImage.astro";
import type { GalleryImageProps } from "@/components/blocks/Gallery/components/GalleryImage/GalleryImage";
import { v4 as uuidv4 } from "uuid";
import { cn } from "@/utils/tailwind";

interface Props {
  images: GalleryImageProps[];
  galleryCaption?: string;
  columns: "null" | "1" | "2" | "3" | "4" | "5" | undefined;
  aspectRatio: number;
  maxWidth: "small" | "text" | "medium" | "large" | "full" | "wide-content";
  className?: string;
}

const {
  images,
  galleryCaption,
  columns,
  maxWidth = "wide-content",
  className,
} = Astro.props;
---

<Box
  as="section"
  className={cn("sm:px-2 md:px-3", className)}
  breakout
  blockSpacing
>
  <Box
    as="div"
    className="mx-auto grid gap-1"
    maxWidth={maxWidth}
    columns={columns}
  >
    {
      images.length > 0 &&
        images?.map((image) => (
          <GalleryImage
            key={uuidv4()}
            image={image?.image}
            alt={image?.alt}
            caption={image?.caption}
          />
        ))
    }
    {
      galleryCaption && (
        <Box as="div" className="mx-auto sm:max-w-lg lg:max-w-5xl">
          <Type as="figcaption" className="text-gray-600 text-sm italic">
            {galleryCaption}
          </Type>
        </Box>
      )
    }
  </Box>
</Box>
