---
// eslint-disable-next-line import/no-unresolved
import { getCollection, z } from "astro:content";
import Base from "@/layouts/Base.astro";
import { WorkSchemaProps } from "@/schemas/work.schema";
import type { Render } from "astro:content";
import { Box } from "@/components/ui/Box/Box";
import { Type } from "@/components/ui/Type/Type";
import { Dot } from "@/components/decoration/Dot/Dot";
import { Prose } from "@/components/ui/Prose/Prose";
import { ExternalLink } from "@/components/ui/ExternalLink/ExternalLink";
import AstroImage from "@/components/ui/AstroImage/AstroImage.astro";
import type { ImageMetadata } from "astro";
import { LineBreak } from "@/components/decoration/LineBreak/LineBreak";

export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: {
    slug: string;
    data: z.infer<typeof WorkSchemaProps> & {
      thumbnailImage: ImageMetadata;
    };
    render(): Render[".mdx"];
  };
}
// Pick off main content from the entry
const { Content } = await Astro.props.entry.render();

// Pick off the frontmatter
const {
  title,
  description,
  agency,
  agencyUrl,
  client,
  clientUrl,
  projectUrlTitle,
  projectUrl,
  repoTitle,
  repoUrl,
  tools,
  dates,
  thumbnailImage,
} = Astro.props.entry.data;
---

<Base title={title}>
  <Box as="div" className="px-1 py-3 md:px-2">
    <Box
      as="div"
      className="mx-auto mb-1 flex max-w-prose flex-col justify-center"
    >
      <!-- <AstroImage
        src={thumbnailImage}
        alt={title}
        className="mb-2 h-4 w-4 rounded-full "
      /> -->
        className="mx-auto mb-1 h-4 w-4 rounded-full "
      />
      <Type as="h1" className="mb-0.5 text-center text-3xl leading-none">
        {title}
      </Type>

      <Type as="p" className="mb-1 text-center text-md italic"
        >{description}</Type
      >

      <Box
        as="section"
        className="my-1 flex items-center justify-center gap-0.25"
      >
        {client && <ExternalLink href={clientUrl}>{client}</ExternalLink>}
        {
          client && agency && (
            <Type as="span" className="text-sm">
              x
            </Type>
          )
        }
        {agency && <ExternalLink href={agencyUrl}>{agency}</ExternalLink>}
      </Box>

      <LineBreak />
    </Box>

    <Prose as="div" className="mx-auto">
      <Content />
    </Prose>

    <Box as="div" className="mx-auto mt-1 flex max-w-prose flex-col gap-0.5">
      <LineBreak />
      <ExternalLink href={projectUrl}>
        {projectUrlTitle || projectUrl}
      </ExternalLink>

      <Type as="p">{tools}</Type>

      <ExternalLink href={repoUrl}>
        {repoTitle}
      </ExternalLink>

      <Type as="p">{dates}</Type>
    </Box>
  </Box>
</Base>
